{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/echelon-canvas/echelon-canvas.component.ts","./src/app/components/echelon-canvas/echelon-canvas.component.html","./src/app/components/message-snack-bar/message-snack-bar.component.ts","./src/app/components/message-snack-bar/message-snack-bar.component.html","./src/app/models/Echelon.ts","./src/app/models/ProcessingUnit.ts","./src/app/models/WorkerRequestType.ts","./src/app/models/WorkerResponseType.ts","./src/app/services/image-processing.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: \"legacy\" })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, ElementRef, ViewChildren, QueryList, AfterViewInit, ViewChild } from \"@angular/core\";\nimport { fromEvent, of } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\nimport { ImageProcessingService } from \"./services/image-processing.service\";\nimport { Echelon } from \"./models\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { faQuestionCircle, faArrowAltCircleDown } from \"@fortawesome/free-regular-svg-icons\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { MessageSnackBarComponent } from \"./components/message-snack-bar/message-snack-bar.component\";\nimport { environment } from \"../environments/environment\";\nimport { CdkDragDrop, moveItemInArray } from \"@angular/cdk/drag-drop\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"]\n})\nexport class AppComponent implements AfterViewInit {\n\n  @ViewChildren(\"canvasSelector\")\n  private selectedImagesCanvasesQueryList!: QueryList<ElementRef<HTMLCanvasElement>>;\n  @ViewChild(\"resultCanvas\")\n  private resultCanvasElementRef!: ElementRef<HTMLCanvasElement>;\n  @ViewChild(\"imgFileInput\")\n  private imgFileInputRef!: ElementRef<HTMLInputElement>;\n\n  public environment = environment;\n  public isReady = false;\n  public isWorking = false;\n  public files = new Array<string>();\n  public extractedEchelons = new Array<Echelon>();\n  public faGithub = faGithub;\n  public faQuestionCircle = faQuestionCircle;\n  public faArrowAltCircleDown = faArrowAltCircleDown;\n  public resultCanvasHidden = true;\n  public extractionDuration = 0;\n  public showExtractionDuration = false;\n  public enableReordering = true;\n  public rowsLayout = \"\";\n\n  public constructor(private snackBar: MatSnackBar, private imageProcessingService: ImageProcessingService) {\n  }\n\n  public ngAfterViewInit(): void {\n    this.imageProcessingService.load().pipe(catchError(error => {\n      console.log(error);\n      this.snackBar.openFromComponent(MessageSnackBarComponent, { data: `There was an error loading OpenCV: ${error}` });\n      return of(false);\n    })).subscribe(loadResult => {\n      this.isReady = loadResult;\n    });\n  }\n\n  public onFileSelected(target: EventTarget | null): void {\n    this.files = [];\n    this.resultCanvasHidden = true;\n    this.showExtractionDuration = false;\n    this.extractedEchelons = [];\n    const value = target as HTMLInputElement;\n    if (value == null || value.files == null || value.files.length === 0) {\n      return;\n    }\n    else {\n      // eslint-disable-next-line @typescript-eslint/prefer-for-of\n      for (let i = 0; i < value.files.length; i++) {\n        const file = value.files[i];\n        this.files.push(file.name);\n        const fileReader: FileReader = new FileReader();\n\n        const load$ = fromEvent<ProgressEvent<FileReader>>(fileReader, \"loadend\");\n\n        load$.subscribe(result => {\n          this.loadImageToCanvas(result, file.name);\n        });\n\n        fileReader.readAsDataURL(file);\n      }\n    }\n  }\n\n  private loadImageToCanvas(data: ProgressEvent<FileReader>, fileName: string): void {\n    if (data != null && data.target != null) {\n      const image = new Image();\n\n      image.onload = (img): void => {\n        const canvas = this.selectedImagesCanvasesQueryList.find(x => x.nativeElement?.title === fileName)?.nativeElement;\n        const context = canvas?.getContext(\"2d\");\n        const imageElement = img.target as HTMLImageElement;\n\n        if (canvas) {\n          canvas.width = imageElement.naturalWidth;\n          canvas.height = imageElement.naturalHeight;\n        }\n        context?.drawImage(imageElement, 0, 0);\n      };\n\n      image.src = data.target.result as string;\n    }\n  }\n\n  public extractAllEchelons(): void {\n    this.showExtractionDuration = false;\n    this.isWorking = true;\n    const selectedImagesdata = new Array<ImageData>();\n    this.selectedImagesCanvasesQueryList.forEach(elementRef => {\n      const canvas = elementRef.nativeElement;\n      const context = canvas?.getContext(\"2d\");\n      const imagedata = context?.getImageData(0, 0, canvas.width, canvas.height);\n      if (imagedata) {\n        selectedImagesdata.push(imagedata);\n      }\n    });\n\n    this.clearSelectedFiles();\n\n    const t0 = performance.now();\n    this.imageProcessingService.extractEchelons(selectedImagesdata)\n      .subscribe(images => {\n\n        this.extractedEchelons = [];\n        this.isWorking = false;\n        images.forEach(imageData => {\n          this.extractedEchelons.push(new Echelon(imageData));\n        });\n\n        const t1 = performance.now();\n        console.log(`Echelon extraction took ${(t1 - t0)} milliseconds.`);\n        this.extractionDuration = (t1 - t0);\n        this.showExtractionDuration = true;\n      },\n        error => {\n          console.log(error);\n          this.snackBar.openFromComponent(MessageSnackBarComponent, { data: `There was an error extracting echelons: ${error}` });\n        });\n  }\n\n  public combineSelectedEchelons(): void {\n    const selectedEchelons = this.extractedEchelons.filter(echelon => echelon.isSelected);\n    const imagesData = selectedEchelons.map(echelon => echelon.imageData);\n    this.extractedEchelons = [];\n    this.isWorking = true;\n    this.showExtractionDuration = false;\n    this.imageProcessingService.combineEchelons(imagesData)\n      .subscribe(data => {\n        this.isWorking = false;\n        const canvas = this.resultCanvasElementRef.nativeElement;\n        canvas.width = data.width;\n        canvas.height = data.height;\n        const context = canvas.getContext(\"2d\");\n        context?.putImageData(data, 0, 0);\n        this.resultCanvasHidden = false;\n      },\n        error => {\n          console.log(error);\n          this.snackBar.openFromComponent(MessageSnackBarComponent, { data: `There was an error combining echelons: ${error}` });\n        });\n  }\n\n  private clearSelectedFiles(): void {\n    this.files = [];\n    const fileInput = this.imgFileInputRef?.nativeElement;\n    if (fileInput) {\n      fileInput.value = \"\";\n    }\n  }\n\n  public onDownloadClick(): void {\n    const image = this.resultCanvasElementRef.nativeElement.toDataURL(\"image/png\", 1.0);\n    const a = document.createElement(\"a\");\n    a.href = image;\n    a.download = \"echelons.png\";\n    a.click();\n  }\n\n  public onDrop(event: CdkDragDrop<Echelon[]>): void {\n    moveItemInArray(this.extractedEchelons, event.previousIndex, event.currentIndex);\n  }\n}\n","<div gdAreas=\"header | main | footer\" gdRows=\"auto 1fr auto\" gdGap=\"10px\" class=\"grid\">\n\n  <div gdArea=\"header\">\n    <div class=\"toolbar\" fxLayout=\"row\">\n      <img width=\"40\" alt=\"Griffin and Kryuger Logo\" src=\"assets/images/griffinAndKryugerLogoWhite.png\" />\n      <span>Echelon Extractor v{{environment.VERSION}}</span>\n      <div class=\"spacer\"></div>\n      <div class=\"github-link\">\n        <a aria-label=\"How to guide\" target=\"_blank\" rel=\"noopener\"\n          href=\"https://github.com/Usergitbit/EchelonExtractor/wiki/How-to-use\" title=\"How to guide\">\n          <fa-icon [icon]=\"faQuestionCircle\" class=\"icon\"></fa-icon>\n        </a>\n        <a class=\"github-icon\" aria-label=\"Source code\" target=\"_blank\" rel=\"noopener\"\n          href=\"https://github.com/Usergitbit/EchelonExtractor\" title=\"Source code\">\n          <fa-icon [icon]=\"faGithub\" class=\"icon\"></fa-icon>\n        </a>\n      </div>\n    </div>\n\n    <div fxLayout.xs=\"column\" fxLayout.lg=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"10px\">\n      <div>\n        <input hidden (change)=\"onFileSelected($event.target)\" #fileInput type=\"file\" id=\"fileInput\" name=\"file\"\n          accept=\"image/*\" #imgFileInput multiple=\"true\" />\n        <button mat-raised-button color=\"primary\" type=\"button\" md-button (click)=\"imgFileInput.click()\"\n          [disabled]=\"(!isReady || isWorking) \" class=\"button\">Choose screenshots</button>\n      </div>\n\n      <div fxLayout=\"row wrap\" fxLayoutGap=\"10px\" fxFlexAlign=\"center center\">\n        <button mat-raised-button color=\"primary\" type=\"button\" (click)=\"extractAllEchelons()\" class=\"button\"\n          [disabled]=\"(files.length === 0 || !isReady || isWorking)\">\n          Extract Echelons\n        </button>\n\n        <button mat-raised-button color=\"primary\" type=\"button\" (click)=\"combineSelectedEchelons()\"\n          [disabled]=\"(extractedEchelons.length === 0 || !isReady || isWorking)\" class=\"button\">\n          Combine echelons\n        </button>\n      </div>\n\n    </div>\n  </div>\n\n\n\n  <div gdArea=\"main\" fxLayout=\"column\" fxFill fxLayoutGap=\"10px\" class=\"main-grid-area\" cdkScrollable >\n\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"5px\" fxLayoutAlign=\"center center\">\n      <div *ngIf=\"isReady else loadingTemplate\" fxFill>\n\n        <div fxLayout=\"row wrap\" fxLayoutGap=\"10px\" fxLayoutAlign=\"center center\" fxFill>\n          <div *ngFor=\"let fileName of files\">\n            <canvas id={{fileName}} title={{fileName}} #canvasSelector class=\"image-canvas\"></canvas>\n          </div>\n        </div>\n\n        <div *ngIf=\"isWorking\" fxLayoutAlign=\"center center\">\n          <mat-spinner></mat-spinner>\n        </div>\n      </div>\n    </div>\n\n    <div fxFlex fxLayout=\"column\" fxLayoutAlign.lt-sm=\"center start\" fxLayoutAlign.gt-xs=\"center center\" cdkDropList\n      (cdkDropListDropped)=\"onDrop($event)\" class=\"example-list\" *ngIf=\"extractedEchelons.length !== 0\">\n      <div *ngFor=\"let echelon of extractedEchelons\" cdkDrag class=\"example-box\" [cdkDragDisabled]=\"!enableReordering\">\n        <app-echelon-canvas [echelon]=\"echelon\" fxFlex=\"nogrow\"></app-echelon-canvas>\n      </div>\n    </div>\n\n    <div *ngIf=\"showExtractionDuration\" fxFlex fxLayoutAlign=\"center center\">Echelon extraction took\n      {{extractionDuration | number:'1.0'}} miliseconds.</div>\n\n    <div fxFlex fxLayout=\"column\" fxLayoutGap=\"10px\" fxFill fxLayoutAlign=\"center center\">\n      <div class=\"result-canvas\">\n        <canvas #resultCanvas class=\"image-canvas\" [hidden]=\"resultCanvasHidden\"></canvas>\n\n      </div>\n    </div>\n\n  </div>\n\n  <div gdArea=\"footer\">\n    <div fxLayout=\"column\" fxLayoutAlign=\"center center\" >\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"enableReordering\" class=\"enable-reordering-checkbox \"\n        color=\"primary\" *ngIf=\"(extractedEchelons.length !== 0)\">Enable reordering</mat-checkbox>\n\n        <button *ngIf=\"!resultCanvasHidden\" mat-raised-button color=\"primary\" (click)=\"onDownloadClick()\" class=\"download-button\" >\n          <mat-icon>save_alt</mat-icon>\n        </button>\n    </div>\n  </div>\n</div>\n\n<ng-template #loadingTemplate>\n  <mat-spinner></mat-spinner>\n</ng-template>","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { ServiceWorkerModule } from \"@angular/service-worker\";\nimport { environment } from \"../environments/environment\";\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { EchelonCanvasComponent } from \"./components/echelon-canvas/echelon-canvas.component\";\nimport { FontAwesomeModule } from \"@fortawesome/angular-fontawesome\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\nimport { MessageSnackBarComponent } from \"./components/message-snack-bar/message-snack-bar.component\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { FormsModule } from \"@angular/forms\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EchelonCanvasComponent,\n    MessageSnackBarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatProgressSpinnerModule,\n    MatSnackBarModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    MatIconModule,\n    ServiceWorkerModule.register(\"ngsw-worker.js\", { enabled: environment.production }),\n    FontAwesomeModule,\n    DragDropModule,\n    MatCheckboxModule,\n    FormsModule \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Component, Input, ViewChild, ElementRef, AfterViewInit } from \"@angular/core\";\nimport { Echelon } from \"src/app/models\";\n\n@Component({\n  selector: \"app-echelon-canvas\",\n  templateUrl: \"./echelon-canvas.component.html\",\n  styleUrls: [\"./echelon-canvas.component.scss\"]\n})\nexport class EchelonCanvasComponent implements AfterViewInit {\n\n  @ViewChild(\"echelonCanvasSelector\")\n  private canvas!: ElementRef<HTMLCanvasElement>;\n\n  @Input()\n  public echelon = new Echelon(new ImageData(1, 1));\n\n  public ngAfterViewInit(): void {\n    const canvas = this.canvas?.nativeElement;\n    if (canvas) {\n      const context = canvas?.getContext(\"2d\");\n      const imageData = this.echelon.imageData;\n      canvas.width = imageData.width;\n      canvas.height = imageData.height;\n      context?.putImageData(this.echelon.imageData, 0, 0);\n    }\n  }\n\n  public onClick(): void {\n    this.echelon.isSelected = !this.echelon.isSelected;\n  }\n\n}\n","<div class=\"card\" [class.selected]=\"echelon.isSelected\" (click)=\"onClick()\">\n  <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap>\n    <canvas #echelonCanvasSelector class=\"echelon-canvas\"></canvas>\n  </div>\n</div>","import { Component, Inject } from \"@angular/core\";\nimport { MAT_SNACK_BAR_DATA } from \"@angular/material/snack-bar\";\n\n@Component({\n  selector: \"app-message-snack-bar\",\n  templateUrl: \"./message-snack-bar.component.html\",\n  styleUrls: [\"./message-snack-bar.component.scss\"]\n})\nexport class MessageSnackBarComponent {\n\n  public constructor(@Inject(MAT_SNACK_BAR_DATA) public errorMessage: string) { }\n\n}\n","<p class=\"error-message\">\n    <img src=\"../../../assets/images/ribdiedinside.png\" class=\"rib-died-inside\" /> {{errorMessage}}. Try turning it off\n    and on again.\n</p>","export class Echelon {\n    private static idCounter = 0;\n\n    public imageData: ImageData = new ImageData(1, 1);\n    public isSelected: boolean = true;\n\n    private id: number = Echelon.idCounter++;\n    public get Id(): number {\n        return this.id;\n    }\n\n    public constructor(imageData: ImageData) {\n        this.imageData = imageData;\n    }\n}\n","import { Observable, Subject } from \"rxjs\";\n\nexport class ProcessingUnit {\n\n    public static processingUnitId: number = 1;\n\n    private totalImages: number = 0;\n    private currentlyProcessed: number = 0;\n    private id: number;\n    private resultImages: Array<ImageData> = new Array<ImageData>();\n    private resultSubject: Subject<Array<ImageData>> = new Subject<Array<ImageData>>();\n\n    public get TotalImages(): number {\n        return this.totalImages;\n    }\n\n    public get Id(): number {\n        return this.id;\n    }\n\n    public constructor(totalImages: number) {\n        this.totalImages = totalImages;\n        this.id = ProcessingUnit.processingUnitId++;\n    }\n\n    public next(imageData: Array<ImageData>): void {\n        this.resultImages = this.resultImages.concat(imageData);\n        this.currentlyProcessed++;\n        if (this.isFinished()) {\n            this.resultSubject.next(this.resultImages);\n            this.resultSubject.complete();\n        }\n    }\n\n    public isFinished(): boolean {\n        if (this.currentlyProcessed === this.totalImages) {\n            return true;\n        }\n\n        return false;\n    }\n\n    public asObservable(): Observable<Array<ImageData>> {\n        return this.resultSubject.asObservable();\n    }\n\n    public error(message?: string): void {\n        this.resultSubject.error(message);\n    }\n\n\n\n\n}","export enum WorkerRequestType {\n    Load,\n    ExtractEchelons,\n    CombineEchelons\n}\n","export enum WorkerResponseType {\n    LoadCompleted,\n    EchelonExtracted,\n    EchelonsCombined,\n    Error\n}\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable, Subject } from \"rxjs\";\nimport {\n  IWorkerResponseMessageEvent, IWorkerRequestMessageData, WorkerResponseType,\n  WorkerRequestType, IRequestInformation, IWorkerResponseMessageData, IRequestContent, IImage\n} from \"../models\";\nimport { ProcessingUnit } from \"../models/ProcessingUnit\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ImageProcessingService {\n\n  private requestId = 1;\n\n  private workerPool: Array<Worker> = new Array<Worker>();\n\n  private isLoadedSubject = new BehaviorSubject<boolean>(false);\n\n  private processingUnitsMap = new Map<number, ProcessingUnit>();\n\n  private combineRequestMap = new Map<number, Subject<ImageData>>();\n\n  private availableThreads = 4;\n  public constructor() {\n    // do nothing\n  }\n\n  public load(): Observable<boolean> {\n    if (typeof Worker !== \"undefined\") {\n\n      this.availableThreads = navigator.hardwareConcurrency;\n\n      for (let i = 0; i < this.availableThreads; i++) {\n        this.workerPool[i] = new Worker(new URL(\"./open-cv.worker\", import.meta.url), { type: \"module\" });\n        this.workerPool[i].onmessage = (message: IWorkerResponseMessageEvent): void => { this.handleResponseMessage(message.data); };\n        this.workerPool[i].onerror = (error): void => { this.handleCriticalError(error); };\n        const request = this.createRequestInformation(new ProcessingUnit(1), WorkerRequestType.Load);\n        console.log(\"Sending load request.\");\n        this.postRequest(this.workerPool[i], { information: request });\n      }\n\n    }\n    else {\n      this.isLoadedSubject.error(\"Web workers are not supported. The application can not run on this browser.\");\n    }\n    return this.isLoadedSubject.asObservable();\n  }\n\n  public extractEchelons(images: Array<ImageData>): Observable<Array<ImageData>> {\n\n    if (!images || images.length === 0) {\n      throw new Error(\"No image data provided!\");\n    }\n\n    const processingUnit = new ProcessingUnit(images.length);\n    this.processingUnitsMap.set(processingUnit.Id, processingUnit);\n\n    let i = 0;\n    for (const image of images) {\n      const requestInformation = this.createRequestInformation(processingUnit, WorkerRequestType.ExtractEchelons);\n      const requestContent = this.createRequestContent([image]);\n      this.postRequest(this.workerPool[i], { information: requestInformation, content: requestContent });\n\n      if (i < this.availableThreads - 1) {\n        i++;\n      }\n      else {\n        // if we have more images than workers then loop through them again\n        i = 0;\n      }\n    }\n\n    return processingUnit.asObservable();\n  }\n\n  public combineEchelons(images: Array<ImageData>): Observable<ImageData> {\n    if (!images || images.length === 0) {\n      throw new Error(\"No image data provided\");\n    }\n\n    const requestInformation = this.createRequestInformation(new ProcessingUnit(1), WorkerRequestType.CombineEchelons);\n    const requestContent = this.createRequestContent(images);\n    const observableEchelon = new Subject<ImageData>();\n\n    this.combineRequestMap.set(requestInformation.requestId, observableEchelon);\n    this.postRequest(this.workerPool[0], { information: requestInformation, content: requestContent });\n\n    return observableEchelon.asObservable();\n  }\n\n  private handleResponseMessage(data: IWorkerResponseMessageData): void {\n    switch (data.information.responseType) {\n      case WorkerResponseType.LoadCompleted: {\n        //console.log(\"OpenCV has been loaded.\");\n        this.isLoadedSubject.next(true);\n        break;\n      }\n      case WorkerResponseType.EchelonExtracted:\n        this.handleEchelonExtractedResponse(data);\n        break;\n      case WorkerResponseType.EchelonsCombined:\n        this.handleEchelonCombinedResponse(data);\n        break;\n      case WorkerResponseType.Error:\n        this.handleErrorResponse(data);\n        break;\n      default:\n        throw new Error(`Reponse type ${data.information.responseType} not implemented`);\n    }\n  }\n\n\n  private handleEchelonExtractedResponse(data: IWorkerResponseMessageData): void {\n\n    const responseInformation = data.information;\n    const responseContent = data.content;\n    const processingUnit = this.processingUnitsMap.get(responseInformation.processingUnitId);\n\n    if (responseContent) {\n      const responseImages = new Array<ImageData>();\n      responseContent.images.forEach(image => {\n        const imageData = new ImageData(new Uint8ClampedArray(image.imageArrayBuffer), image.width, image.height);\n        responseImages.push(imageData);\n      });\n      processingUnit?.next(responseImages);\n      if (processingUnit?.isFinished()) {\n        this.processingUnitsMap.delete(processingUnit.Id);\n      }\n    }\n    else {\n      processingUnit?.error(`No response content for ${processingUnit.Id}`);\n    }\n  }\n\n  private handleEchelonCombinedResponse(data: IWorkerResponseMessageData): void {\n\n    const responseInformation = data.information;\n    const responseContent = data.content;\n    const requestSubject = this.combineRequestMap.get(responseInformation.requestId);\n\n    if (responseContent) {\n      const image = responseContent.images[0];\n      let responseImageData;\n      if (image) {\n        responseImageData = new ImageData(new Uint8ClampedArray(image.imageArrayBuffer), image.width, image.height);\n      }\n      else {\n        responseImageData = new ImageData(1, 1);\n      }\n\n      requestSubject?.next(responseImageData);\n      requestSubject?.complete();\n      this.combineRequestMap.delete(responseInformation.requestId);\n    }\n\n    else {\n      requestSubject?.error(`Missing payload for request ${responseInformation.requestId}`);\n      this.combineRequestMap.delete(responseInformation.requestId);\n    }\n  }\n\n  private handleErrorResponse(data: IWorkerResponseMessageData): void {\n    const responseInformation = data.information;\n    const processingUnit = this.processingUnitsMap.get(responseInformation.processingUnitId);\n\n    if (processingUnit) {\n      processingUnit.error(responseInformation.message);\n    }\n    const combineRequest = this.combineRequestMap.get(responseInformation.requestId);\n    if (combineRequest) {\n      combineRequest.error(responseInformation.message);\n    }\n\n    if (data.information.requestId === 1) {\n      this.isLoadedSubject.error(responseInformation.message);\n    }\n  }\n\n  private handleCriticalError(error: ErrorEvent): void {\n    const errorMessage = `An unexpected error has occured: ${error.message} at line ${error.lineno} collumn ${error.colno}`;\n    this.combineRequestMap.forEach(request => {\n      request.error(errorMessage);\n    });\n    this.processingUnitsMap.forEach(request => {\n      request.error(errorMessage);\n    });\n  }\n\n  private createRequestInformation(processingUnit: ProcessingUnit, requestTypeParameter: WorkerRequestType): IRequestInformation {\n    const requestId = this.requestId++;\n    return { requestType: requestTypeParameter, requestId: requestId, processingUnitId: processingUnit.Id };\n  }\n\n  private createRequestContent(images: Array<ImageData>): IRequestContent {\n\n    const contentImages = new Array<IImage>();\n    images.forEach(image => {\n      contentImages.push({ imageArrayBuffer: image.data.buffer, width: image.width, height: image.height });\n    });\n\n    return { images: contentImages };\n  }\n\n  private postRequest(worker: Worker, request: IWorkerRequestMessageData): void {\n    if (request.content) {\n      const arrayBuffers = request.content.images.map(image => image.imageArrayBuffer);\n      worker.postMessage(request, arrayBuffers);\n    }\n    else {\n      worker.postMessage(request);\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  VERSION: \"1.4.1\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}