(()=>{"use strict";function C(e,n,t,o,c,a,i){try{var u=e[a](i),r=u.value}catch(s){return void t(s)}u.done?n(r):Promise.resolve(r).then(o,c)}function I(e){return function(){var n=this,t=arguments;return new Promise(function(o,c){var a=e.apply(n,t);function i(r){C(a,o,c,i,u,"next",r)}function u(r){C(a,o,c,i,u,"throw",r)}i(void 0)})}}var f=(()=>{return(e=f||(f={}))[e.Load=0]="Load",e[e.ExtractEchelons=1]="ExtractEchelons",e[e.CombineEchelons=2]="CombineEchelons",f;var e})(),m=(()=>{return(e=m||(m={}))[e.LoadCompleted=0]="LoadCompleted",e[e.EchelonExtracted=1]="EchelonExtracted",e[e.EchelonsCombined=2]="EchelonsCombined",e[e.Error=3]="Error",m;var e})();function g(){return(g=I(function*(e){console.log("Recieved load request"),self.Module={wasmBinaryFile:"assets/opencv/wasm/4.4/opencv_js.wasm",usingWasm:!0,locateFile:U,onRuntimeInitialized:()=>{h({information:{responseType:m.LoadCompleted,requestId:e.information.requestId,processingUnitId:e.information.processingUnitId}})}},self.importScripts("./assets/opencv/wasm/4.4/opencv.js"),cv=yield cv()})).apply(this,arguments)}function v(e,n){h({information:w(m.Error,n.information.requestId,n.information.processingUnitId,`There was an error processing the request. Message:${e.message}. Line number ${e.lineno} Column number: ${e.colno}`)})}function R(e){const n=new ImageData(new Uint8ClampedArray(e.imageArrayBuffer),e.width,e.height),t=cv.matFromImageData(n),o=cv.matFromImageData(n);cv.cvtColor(o,o,cv.COLOR_RGBA2GRAY,0),cv.threshold(o,o,50,250,cv.THRESH_BINARY);const c=new cv.MatVector,a=new cv.Mat;cv.findContours(o,c,a,cv.RETR_CCOMP,cv.CHAIN_APPROX_SIMPLE);const i=new Array;for(let u=0;u<c.size();u++){const r=c.get(u),s=cv.boundingRect(r),d=s.width/s.height;if(M(d,s.width)||L(d,s.width)){const l=t.roi(s),x=p(l);i.push(x),l.delete()}r.delete()}return a.delete(),c.delete(),o.delete(),t.delete(),i.reverse()}function M(e,n){return e>=6.1&&e<=6.5&&n>200}function L(e,n){return e>=4.7&&e<=5&&n>200}function w(e,n,t,o){return{requestId:n,responseType:e,message:o,processingUnitId:t}}function E(e){const n=new Array;return e.forEach(t=>{n.push({imageArrayBuffer:t.data.buffer,height:t.height,width:t.width})}),{images:n}}function h(e){if(e.content){const n=e.content.images.map(t=>t.imageArrayBuffer);postMessage(e,n)}else postMessage(e)}function U(e,n){return"opencv_js.wasm"===e?n+"assets/opencv/wasm/4.4/"+e:n+e}function p(e){const n=new cv.Mat,t=e.type()%8,o=t<=cv.CV_8S?1:t<=cv.CV_32S?1/256:255,c=t===cv.CV_8S||t===cv.CV_16S?128:0;switch(e.convertTo(n,cv.CV_8U,o,c),n.type()){case cv.CV_8UC1:cv.cvtColor(n,n,cv.COLOR_GRAY2RGBA);break;case cv.CV_8UC3:cv.cvtColor(n,n,cv.COLOR_RGB2RGBA);break;case cv.CV_8UC4:break;default:throw new Error("Bad number of channels (Source image must have 1, 3 or 4 channels)")}const a=new ImageData(new Uint8ClampedArray(n.data),n.cols,n.rows);return n.delete(),a}addEventListener("message",e=>{const n=e.data;switch(n.information.requestType){case f.Load:try{!function _(e){g.apply(this,arguments)}(n)}catch(t){v(t,n)}break;case f.ExtractEchelons:try{!function y(e){if(!e.content)throw new Error("Image content must not be null or undefined");const n=e.content.images,t=new Array;for(const a of n)R(a).forEach(u=>{t.push(u)});h({information:w(m.EchelonExtracted,e.information.requestId,e.information.processingUnitId),content:E(t)})}(n)}catch(t){v(t,n)}break;case f.CombineEchelons:try{!function b(e){if(!e.content)throw new Error("Image content must not be null or undefined");const t=function A(e){let n=e.reduce((r,s)=>r+s.height,0);const t=e.reduce((r,s)=>r>s.width?r:s.width,0);let o=cv.CV_8UC4;const c=cv.Mat.ones(n,t,o);let a=0,i=e[0].height;for(let r=0;r<e.length;r++){const s=e[r],d=new ImageData(new Uint8ClampedArray(s.imageArrayBuffer),s.width,s.height),l=cv.matFromImageData(d);n+=l.rows,o=l.type(),l.copyTo(c.rowRange(a,i).colRange(0,l.cols)),r!==e.length-1&&(a=i,i+=e[r+1].height),l.delete()}const u=p(c);return c.delete(),u}(e.content.images);h({information:w(m.EchelonsCombined,e.information.requestId,e.information.processingUnitId),content:E(new Array(t))})}(n)}catch(t){v(t,n)}break;default:throw new Error(`Request type ${n.information.requestType} not implemented.`)}})})();