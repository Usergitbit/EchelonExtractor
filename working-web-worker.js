!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,(function(t){return e[t]}).bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s="q4u9")}({q4u9:function(e,t,n){"use strict";n.r(t);function o(e,t,n,o){return new(n||(n=Promise))((function(r,c){function a(e){try{s(o.next(e))}catch(t){c(t)}}function i(e){try{s(o.throw(e))}catch(t){c(t)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,i)}s((o=o.apply(e,t||[])).next())}))}Object.create;var r,c;Object.create;function a(e){const t=new ImageData(new Uint8ClampedArray(e.imageArrayBuffer),e.width,e.height),n=cv.matFromImageData(t);let o=cv.matFromImageData(t);cv.cvtColor(o,o,cv.COLOR_RGBA2GRAY,0),cv.threshold(o,o,50,250,cv.THRESH_BINARY);let r=new cv.MatVector;const c=new cv.Mat;cv.findContours(o,r,c,cv.RETR_CCOMP,cv.CHAIN_APPROX_SIMPLE);const a=new Array;for(let i=0;i<r.size();i++){let e=r.get(i);const t=cv.boundingRect(e),o=t.width/t.height;if(o>=6.1&&o<=6.5&&t.width>100){console.log(`${i} : Width:${t.width} Height:${t.height}`);const e=n.roi(t),o=d(e);a.push(o),e.delete()}e.delete()}return c.delete(),r.delete(),o.delete(),n.delete(),a}function i(e,t,n){return{requestId:t,responseType:e,requestCompleted:n}}function s(e){let t=new Array;return e.forEach(e=>{t.push({imageArrayBuffer:e.data.buffer,height:e.height,width:e.width})}),{images:t}}function u(e){if(e.content){const t=e.content.images.map(e=>e.imageArrayBuffer);postMessage(e,t)}else postMessage(e)}function l(e,t){return"opencv_js.wasm"===e?t+"assets/opencv/wasm/4.4/"+e:t+e}function d(e){const t=new cv.Mat,n=e.type()%8,o=n<=cv.CV_8S?1:n<=cv.CV_32S?1/256:255,r=n===cv.CV_8S||n===cv.CV_16S?128:0;switch(e.convertTo(t,cv.CV_8U,o,r),t.type()){case cv.CV_8UC1:cv.cvtColor(t,t,cv.COLOR_GRAY2RGBA);break;case cv.CV_8UC3:cv.cvtColor(t,t,cv.COLOR_RGB2RGBA);break;case cv.CV_8UC4:break;default:throw new Error("Bad number of channels (Source image must have 1, 3 or 4 channels)")}const c=new ImageData(new Uint8ClampedArray(t.data),t.cols,t.rows);return t.delete(),c}!function(e){e[e.Load=0]="Load",e[e.ExtractEchelons=1]="ExtractEchelons",e[e.CombineEchelons=2]="CombineEchelons"}(r||(r={})),function(e){e[e.LoadCompleted=0]="LoadCompleted",e[e.EchelonExtracted=1]="EchelonExtracted",e[e.EchelonsCombined=2]="EchelonsCombined",e[e.Error=3]="Error"}(c||(c={})),addEventListener("message",e=>{const t=e.data;switch(t.information.requestType){case r.Load:!function(e){o(this,void 0,void 0,(function*(){console.log("Recieved load request"),self.Module={wasmBinaryFile:"assets/opencv/wasm/4.4/opencv_js.wasm",usingWasm:!0,locateFile:l,onRuntimeInitialized:()=>{u({information:{responseType:c.LoadCompleted,requestId:e.information.id}})}},self.importScripts("./assets/opencv/wasm/4.4/opencv.js"),cv=yield cv()}))}(t);break;case r.ExtractEchelons:!function(e){if(!e.content)throw new Error("Image content must not be null or undefined");const t=e.content.images;let n=new Array;for(let c=0;c<t.length;c++){a(t[c]).forEach(e=>{n.push(e)})}const o=i(c.EchelonExtracted,e.information.id,!0),r=s(n);u({information:o,content:r})}(t);break;case r.CombineEchelons:!function(e){if(!e.content)throw new Error("Image content must not be null or undefined");const t=function(e){let t=e.reduce((e,t)=>e+t.height,0),n=e.reduce((e,t)=>e>t.width?e:t.width,0),o=cv.CV_8UC4,r=cv.Mat.ones(t,n,o),c=0,a=e[0].height;for(let s=0;s<e.length;s++){const n=e[s],i=new ImageData(new Uint8ClampedArray(n.imageArrayBuffer),n.width,n.height),u=cv.matFromImageData(i);t+=u.rows,o=u.type(),u.copyTo(r.rowRange(c,a).colRange(0,u.cols)),s!=e.length-1&&(c=a,a+=e[s+1].height),u.delete()}const i=d(r);return r.delete(),i}(e.content.images),n=i(c.EchelonsCombined,e.information.id,!0),o=s(new Array(t));u({information:n,content:o})}(t);break;default:throw new Error(`Request type ${t.information.requestType} not implemented.`)}})}});